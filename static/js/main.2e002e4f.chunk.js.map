{"version":3,"sources":["services/api.js","components/modal/modalDetalhes.js","components/listaComics/listaComics.js","components/header/header.js","App.js","index.js"],"names":["ts","Math","floor","Date","now","hash","CryptoJS","MD5","toString","Api","axios","create","baseURL","params","apikey","ModalDetalhes","showModal","closeModal","id","useState","detail","setDetail","img","setImg","price","setPrice","useEffect","get","then","response","data","results","thumbnail","path","extension","prices","catch","err","console","error","Modal","size","aria-labelledby","centered","show","onHide","Header","Title","title","Body","style","textAlign","src","alt","width","marginBottom","description","pageCount","Footer","Button","onClick","ListaComics","comics","setComics","modalShow","setModalShow","idComic","setIdComic","log","className","Form","InputGroup","Prepend","Text","FormControl","onChange","event","titleStartsWith","target","value","map","comic","Card","Img","variant","Check","type","label","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e002e4f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport CryptoJS from \"crypto-js\";\n\nconst ts = Math.floor(Date.now() / 1000);\nconst apikey = \"d06c2cbee8ef14e74aa4561e1f135090\";\nconst hash = CryptoJS.MD5(\n  ts +\n    \"0da6efb140fbb420811af22f041b8c98681eecbad06c2cbee8ef14e74aa4561e1f135090\"\n).toString();\n\nconst Api = axios.create({\n  baseURL: \"https://gateway.marvel.com/v1/public/\",\n  params: {\n    apikey: apikey,\n    hash: hash,\n    ts: ts,\n  },\n});\n\nexport default Api;\n","import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Api from \"../../services/api\";\n\nexport default function ModalDetalhes({ showModal, closeModal, id }) {\n  const [detail, setDetail] = useState([]);\n  const [img, setImg] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  // Sempre que o botão \"Details\" for clicado, o Hook carrega as informações do quadrinho utilizando o seu ID.\n  useEffect(() => {\n    Api.get(`comics/${id}`)\n      .then((response) => {\n        setDetail(response.data.data.results[0]);\n        setImg(\n          response.data.data.results[0].thumbnail.path +\n            \".\" +\n            response.data.data.results[0].thumbnail.extension\n        );\n        setPrice(response.data.data.results[0].prices[0].price);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [id]);\n  return (\n    <Modal\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={showModal}\n      onHide={closeModal}\n    >\n      <Modal.Header>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {detail.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ textAlign: \"center\" }}>\n        <img\n          src={img}\n          alt=\"thumbnail\"\n          style={{ width: \"350px\", marginBottom: \"1em\" }}\n        />\n        <h4>Description</h4>\n        <p>{detail.description}</p>\n        <p>\n          <b>Price:</b> ${price}\n          <br />\n          <b>Page count:</b> {detail.pageCount}\n          <br />\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={closeModal}>Fechar</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import \"./listaComics.css\";\nimport Api from \"../../services/api\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Form from \"react-bootstrap/Form\";\nimport ModalDetalhes from \"../modal/modalDetalhes\";\n\nimport React, { useState, useEffect } from \"react\";\n\nexport default function ListaComics() {\n  const [comics, setComics] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [idComic, setIdComic] = useState(\"\");\n\n  // Requisição a API para gerar a lista de Quadrinhos\n  useEffect(() => {\n    Api.get(`comics`)\n      .then((response) => {\n        setComics(response.data.data.results);\n        console.log(response.data.data.results);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n\n  return (\n    <div className=\"cardExterno\">\n      <div className=\"cardInterno\">\n        <Form>\n          <div className=\"buscaComics\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text>Search</InputGroup.Text>\n              </InputGroup.Prepend>\n              <FormControl\n              //Caixa de busca, utiliza a expressão digitada para buscar quadrinhos\n                id=\"buscaComics\"\n                onChange={(event) => {\n                  Api.get(`comics`, {\n                    params: {\n                      titleStartsWith: event.target.value,\n                    },\n                  })\n                    .then((response) => {\n                      setComics(response.data.data.results);\n                    })\n                    .catch((err) => {\n                      console.error(err);\n                    });\n                }}\n              />\n            </InputGroup>\n          </div>\n          <div className=\"listaComics\">\n            {/* Função map() para exibir cada quadrinho que a API trouxe */}\n            {comics.map((comic) => {\n              return (\n                <div key={comic.id}>\n                  <Card style={{ width: \"18rem\" }}>\n                    <Card.Img\n                      variant=\"top\"\n                      src={\n                        comic.thumbnail.path + \".\" + comic.thumbnail.extension\n                      }\n                    />\n                    <Card.Body>\n                      <Card.Title>{comic.title}</Card.Title>\n                      <Button\n                        variant=\"dark\"\n                        onClick={() => {\n                          setIdComic(comic.id);\n                          setModalShow(true);\n                        }}\n                      >\n                        Details\n                      </Button>\n                    </Card.Body>\n                    <Form.Check\n                      type=\"checkbox\"\n                      id={`sendCheckBox${comic.id}`}\n                      label={\"Send?\"}\n                    />\n                  </Card>\n                </div>\n              );\n            })}\n            <Button type=\"submit\" variant=\"success\">\n              Send Comics\n            </Button>\n          </div>\n        </Form>\n        <ModalDetalhes\n          id={idComic}\n          showModal={modalShow}\n          closeModal={() => setModalShow(false)}\n        />\n      </div>\n    </div>\n  );\n}\n","import \"./header.css\";\n\nexport default function Header() {\n  return (\n    <div className=\"barraHeader\">\n      <h2>Marvel Comics</h2>\n    </div>\n  );\n}\n\n","import \"./App.css\";\nimport ListaComics from \"./components/listaComics/listaComics\";\nimport Header from \"./components/header/header\";\n\nexport default function App() {\n  return (\n    <div>\n      <Header />\n      <ListaComics />\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}